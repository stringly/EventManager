@model IEnumerable<EventManager.ViewModels.AvailableEventsViewModel>

@{
    ViewBag.Title = "Available Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section SideBar{
    <nav id="sidebar" data-spy="affix" style="background-color:#151827; max-width:200px;">
        <!-- Sidebar Links -->
        <ul class="list-unstyled components">
            <li class="active" id="AvailableSideBarButton"><a href="#">Available Events</a></li>
            <li id="UserRegistrationSideBarButton">
                <!-- Link with dropdown items -->
                <a href="#registrationsSubMenu" data-toggle="collapse" aria-expanded="false">My Registrations</a>
                <ul class="collapse list-unstyled" id="registrationsSubMenu">
                    <li id="registrationsSideBarAll"><a href="../UserEventRegistration/UserRegistrations">Show All</a></li>
                    <li id="registrationsSideBarConfirmed"><a href="../UserEventRegistration/UserRegistrations" id="registrationsSideBarConfirmed" ">Confirmed</a></li>
                    <li id="registrationsSideBarPending"><a href="../UserEventRegistration/UserRegistrations" id="registrationsSideBarPending" ">Pending</a></li>
                    <li id="registrationsSideBarStandby"><a href="../UserEventRegistration/UserRegistrations">Standby</a></li>
                    <li id="registrationsSideBarDeclined"><a href="../UserEventRegistration/UserRegistrations">Declined</a></li>
                    <li id="registrationsSideBarDeleted"><a href="../UserEventRegistration/UserRegistrations">Deleted</a></li>

                </ul>
                @*<li><a href="#">Portfolio</a></li>
                    <li><a href="#">Contact</a></li>*@
        </ul>
    </nav>}

<div class="container-fluid" id="AvailableEvents">
    <div class="col-xs-10 col-sm-10">
        <h3>Available Events:</h3>
        <table class="table">
            @foreach (var group in Model.GroupBy(date => date.StartTime.ToShortDateString()))
            {
                var d = Convert.ToString(group.Key);
                DateTime dt = Convert.ToDateTime(d);


                <tr>
                    <th colspan="6" style="background-color:#f0f0f0; font-weight:bold; border-bottom:solid; border-top:solid; border-top-color:black; border-bottom-color:black">@dt.ToLongDateString()</th>
                </tr>
                <tr style="font-size:10px; vertical-align:bottom">
                    <th style="font-weight:bolder; padding-bottom:2px">
                        Event Name
                    </th>
                    <th style="font-weight:bolder; padding-bottom:2px">
                        Start Date/Time
                    </th>
                    <th style="font-weight:bolder; padding-bottom:2px">
                        End Date/Time
                    </th>
                    <th style="text-align:center; font-weight:bolder; padding-bottom:2px">
                        Total Hours
                    </th>
                    <th style="text-align:center; font-weight:bolder; padding-bottom:2px">
                        Available Staffing
                    </th>
                    <th></th>
                </tr>
                foreach (var item in group)
                {
                    var detailsRowID = "detailsRow" + item.EventID;
                    var showDetailsButton = "showDetails" + item.EventID;
                    <tr id="row + @item.EventID" rel="popover">
                        <td style="vertical-align:middle">
                            @Html.DisplayFor(modelItem => item.EventName)
                        </td>
                        <td style="vertical-align:middle">
                            @Html.DisplayFor(modelItem => item.StartTime)
                        </td>
                        <td style="vertical-align:middle">
                            @Html.DisplayFor(modelItem => item.EndTime)
                        </td>
                        <td style="text-align:center; vertical-align:middle">
                            @Html.DisplayFor(modelItem => item.TotalHours)
                        </td>
                        <td style="text-align:center; vertical-align:middle">
                            @Html.DisplayFor(modelItem => item.AvailableStaff)
                        </td>
                        <td style="text-align:center; vertical-align:middle">                            
                            <button type="button" 
                                    class="btn btn-xs"
                                    onClick="ShowDetails(@item.EventID)"
                                    data-toggle="popover"
                                    data-trigger="hover"
                                    data-placement="bottom"
                                    data-content="Show/Hide details"
                                    style="padding:2px; color:blue;">
                                <span class="glyphicon glyphicon-sort"></span>
                            </button>
                            <a style="color:blue; text-decoration:underline; cursor:pointer" onclick="ShowDetails(@item.EventID)">Details</a>
                        </td>
                    </tr>
                        <tr colspan="6" id="@detailsRowID" style="display:none">
                            <td colspan="5" class="accordion-body" style="background-color:#f0f0f0; padding-left:5px; padding-right:5px;">
                                <table class="table table-condensed table-bordered table-responsive" style="margin-bottom:0px; width:100%">
                                    <thead>
                                        <tr style="font-size:10px; vertical-align:bottom; font-weight:bolder; border:none">
                                            <th width="70%" style="border:none; font-weight:bolder">Event Description</th>
                                            <th width="30%" style="text-align:center; font-weight:bolder; border:none">Point of Contact</th>                                           
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                            <td style="text-align:center; vertical-align:middle">@Html.DisplayFor(modelItem => item.EventOwner)</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </td>                           
                            <td colspan="1" style="text-align:center; vertical-align:middle; background-color:#f0f0f0">
                                @using (Html.BeginForm("Register", "UserEventRegistration", FormMethod.Post, new { eventID = item.EventID }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("eventID", item.EventID)
                                    <input type="submit" value="Register" class="btn btn-success" />
                                }
                            </td>
                        </tr>

                            }
                        }

        </table>
    </div>
</div>

@section Scripts{
<script>
    function ShowDetails(id) {
        var detailsSection = "detailsRow" + id;
        if ($('#' + detailsSection).is(":visible")) {
            $('#' + detailsSection).hide();
        }
        else {
            $('#' + detailsSection).show();
        }
    }


</script>    
    
    
    }
