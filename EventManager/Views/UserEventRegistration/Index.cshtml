@using Newtonsoft.Json

@model EventManager.ViewModels.EventRegistrationViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}

<h4></h4>
@section SideBar{
    <nav id="sidebar" data-spy="affix" style="background-color:#151827">
    <!-- Sidebar Links -->
    <ul class="list-unstyled components">
        <li class="active" id="AvailableSideBarButton"><a href="#" onclick="SideBarClick(1)">Available Events</a></li>
        @*<li class="" id="UserRegistrationSideBarButton"><a href="#" onclick="SideBarClick(2)">My Registrations</a></li>*@
        <li id="UserRegistrationSideBarButton">
            <!-- Link with dropdown items -->
            <a href="#registrationsSubMenu"  data-toggle="collapse" aria-expanded="false"onclick="SideBarClick(2)">My Registrations</a>
            <ul class="collapse  list-unstyled" id="registrationsSubMenu">
                <li id="registrationsSideBarAll"><a href="#" onclick="RegistrationFilter(0)">Show All</a></li>
                <li id="registrationsSideBarConfirmed"><a href="#" id="registrationsSideBarConfirmed" onclick="RegistrationFilter(1)">Confirmed</a></li>
                <li id="registrationsSideBarPending" ><a href="#" id="registrationsSideBarPending" onclick="RegistrationFilter(2)">Pending</a></liid="registrationsSideBarPending">
                <li id="registrationsSideBarStandby"><a href="#"  onclick="RegistrationFilter(3)">Standby</a></li>
                <li id="registrationsSideBarDeclined"><a href="#"  onclick="RegistrationFilter(4)">Declined</a></li>
                <li id="registrationsSideBarDeleted"><a href="#"  onclick="RegistrationFilter(5)">Deleted</a></li>
                
            </ul>
        @*<li><a href="#">Portfolio</a></li>
        <li><a href="#">Contact</a></li>*@
    </ul>
</nav>}

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="color:#fff;border-top-left-radius:4px; border-top-right-radius:4px; background-color:#1d2e4a;">
                <button type="button" class="close" style="color:white" data-dismiss="modal">&times;</button>
                <h3 class="modal-title" style="border-radius:4px; color:#fff; font-weight:normal; padding-left:5px"><span>Confirm Registration?</span></h3>
            </div>
            <div class="modal-body" style="padding-top:10px; padding-left:20px">
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button id="btnCancel" class="btn btn-danger btn-lg pull-left" data-dismiss="modal">
                    <span class="glyphicon glyphicon-remove-circle"></span> Cancel
                </button>
                <button id="btnConfirm" class="btn btn-success btn-lg pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-ok-circle"></span> Register
                </button>
            </div>
        </div>
    </div>
</div>
<div id="myRegistrationModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="border-top-left-radius:4px; border-top-right-radius:4px; background-color:#333333;">
                <button type="button" class="close" style="color:white" data-dismiss="modal">&times;</button>
                <h3 class="modal-title" style="border-radius:4px; color:#fff; font-weight:normal; padding-left:5px"><span>Registration Info</span></h3>
            </div>
            <div class="modal-body" style="padding-top:10px; padding-left:20px">
                <p id="myRegistrationModalpDetails"></p>
            </div>
            <div class="modal-footer">
                <button id="btnOK" class="btn btn-success btn-lg pull-left" data-dismiss="modal" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-ok-circle"></span> Done
                </button>
                <button id="btnRegistrationCancel" class="btn btn-danger btn-lg pull-right" >
                    <span class="glyphicon glyphicon-remove-circle"></span> Cancel Registration
                </button>

            </div>
        </div>
    </div>
</div>
<div class="container-fluid" id="AvailableEvents">
        <div class="col-xs-10 col-sm-10">
            <h4>Available Events:</h4>
            <table class="table">
                <tr style="background-color:#333333; color:#fff;">
                    <th>
                        Event Name
                    </th>
                    <th>
                        Start Date/Time
                    </th>
                    <th>
                        End Date/Time
                    </th>
                    <th style="text-align:center">
                        Total Hours
                    </th>
                    <th>
                        Description
                    </th>
                    <th style="text-align:center">
                        Staffing
                    </th>
                    <th></th>
                </tr>
                @foreach (var group in Model.ViewUserAvailableEvents.GroupBy(date => date.StartTime.ToShortDateString()))
                {
                    var d = Convert.ToString(group.Key);
                    DateTime dt = Convert.ToDateTime(d);


                    <tr>
                        <th colspan="7" style="background-color:#808080; color:#fff; font-weight:normal">@dt.ToLongDateString()</th>
                    </tr>

                    foreach (var item in group)
                    {
                        var total = (item.EndTime - item.StartTime).TotalHours;
                        <tr id="row + @item.EventID" rel="popover">
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.EventName)
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.StartTime)
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.EndTime)
                            </td>
                            <td style="text-align:center; vertical-align:middle">
                                @total
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td style="text-align:center; vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.MaxStaff)
                            </td>
                            <td>
                                <button id="@item.EventID" onClick="RegisterClick(this.id)"
                                        value="@item.EventID,@item.EventName,@item.StartTime,@item.EndTime,@item.Description"
                                        class="btn btn-success">
                                    Register
                                </button>
                            </td>
                        </tr>

                    }
                }

            </table>
        </div>
    </div>
<div class="container-fluid" id="UserRegistrations" style="display:none">
        <div class="col-xs-10 col-sm-10 pull-left">
            @*<div class="well" style="padding:5px;background-color:#333333; color:#fff">*@
                <h4 id="registrationHeader"style="margin-top:5px"></h4>
                    <table class="table">
                        <tr style="background-color:#333333; color:#fff; border-top:none">
                            <th>
                                Event Name
                            </th>
                            <th>
                                Event Start
                            </th>
                            <th>
                                Event End
                            </th>
                            <th>
                                Hours
                            </th>
                            <th>
                                Registration Date
                            </th>
                            <th style="text-align:center">
                                Status
                            </th>
                        </tr>

                        @foreach (var r in Model.ViewUserRegistrations)
                        {
                            var hours = (r.EventEndTime - r.EventStartTime).TotalHours;
                            <tr class="@r.Status">
                                <td style="vertical-align: middle">
                                    @Html.DisplayFor(modelItem => r.EventName)
                                </td>
                                <td style="vertical-align: middle">
                                    @r.EventStartTime
                                </td>
                                <td style="vertical-align: middle">
                                    @r.EventEndTime
                                </td>
                                <td style="vertical-align: middle">
                                    @hours
                                </td>
                                <td style="vertical-align: middle">
                                    @r.TimeStamp
                                </td>
                                <td style="text-align:center">
                                    <button class="btn btn-lg" id="@r.RegistrationID" onclick="RegistrationClick(this.id)">
                                        @{
                                            switch (r.Status)
                                            {
                                                case RegistrationStats.Pending:
                                                    <text>
                                                        <span class="glyphicon glyphicon-share"
                                                              style="color:deepskyblue; text-align:center"
                                                              data-toggle="popover"
                                                              data-trigger="hover"
                                                              data-placement="bottom"
                                                              data-content="Registration is Pending approval.">
                                                        </span>
                                                    </text>
                                                    break;
                                                case RegistrationStats.Confirmed:
                                                    <text>
                                                        <span class="glyphicon glyphicon-ok"
                                                              style="color:green; text-align:center"
                                                              data-toggle="popover"
                                                              data-trigger="hover"
                                                              data-placement="bottom"
                                                              data-content="Registration is Confirmed.">
                                                        </span>
                                                    </text>
                                                    break;
                                                case RegistrationStats.Standby:
                                                    <text>
                                                        <span class="glyphicon glyphicon-exclamation-sign"
                                                              style="color:yellow; text-align:center"
                                                              data-toggle="popover"
                                                              data-trigger="hover"
                                                              data-placement="bottom"
                                                              data-content="You are on standby for this event.">
                                                        </span>
                                                    </text>
                                                    break;
                                                case RegistrationStats.Declined:
                                                    <text>
                                                        <span class="glyphicon glyphicon-remove-circle"
                                                              style="color:red; text-align:center"
                                                              data-toggle="popover"
                                                              data-trigger="hover"
                                                              data-placement="bottom"
                                                              data-content="You were not selected to work this event.">
                                                        </span>
                                                    </text>
                                                    break;
                                                case RegistrationStats.Deleted:
                                                    <text>
                                                        <span class="glyphicon glyphicon-remove-sign"
                                                              style="color:red; text-align:center"
                                                              data-toggle="popover"
                                                              data-trigger="hover"
                                                              data-placement="bottom"
                                                              data-content="You canceled the registration for this event.">
                                                        </span>
                                                    </text>
                                                    break;
                                            }//switch r.Status
}
                                    </button>
                                </td>
                            </tr>
                            }
                    </table>
                </div>
</div>




@section Scripts{
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.1/moment.min.js"></script>
    <script type="text/javascript">
        var events = @Html.Raw(JsonConvert.SerializeObject(this.Model.ViewUserAvailableEvents));
        var registrations = @Html.Raw(JsonConvert.SerializeObject(this.Model.ViewUserRegistrations));

    </script>
    <script>
        var selectedEvent = null;
        var selectedRegistration = null;
        $(document).ready(function () {
            $('[data-toggle="popover"]').popover();           
            $('#btnConfirm').click(function (){
                console.log("Click!");
                RegisterForEvent();
            })
            $('#btnRegistrationCancel').click(function(){
                //Cancel Registration
                CancelRegistration();
            })
            function CancelRegistration(){
                $.ajax({
                    type: "POST",
                    url: "/UserEventRegistration/CancelRegistration",
                    data: selectedRegistration,
                    success: function(){
                        alert("Registration canceled successfully")
                        location.reload();
                    },
                    error: function(){
                        alert('Unable to cancel Registration')
                    }
                })
            }

        function RegisterForEvent() {
            console.log("Current EventID is:" + selectedEvent.EventID)
            $.ajax({
                type: "POST",
                url: "/UserEventRegistration/RegisterForEvent",
                data: selectedEvent,
                //contentType: 'application/json; charset=utf-8',
                success: function () {
                    alert('You have been registered');
                    location.reload();
                    //$('#myModal').modal('hide');
                },
                error: function () {
                    alert('Could not register for the event.');
                }
            })
        }    
        })

        function SideBarClick(option){
            console.log(option)
            switch (option){
                case 1:
                    $("#AvailableEvents").show()
                    $("#UserRegistrations").hide()
                    $('#AvailableSideBarButton').addClass("active");
                    $('#UserRegistrationSideBarButton').removeClass("active");
                    break;
                case 2:
                    $("#AvailableEvents").hide();
                    $("#UserRegistrations").show();
                    $('#AvailableSideBarButton').removeClass("active");
                    $('#UserRegistrationSideBarButton').addClass("active");
                    RegistrationFilter(0);
                    break;
            }
        }
        function RegistrationFilter(option){
            switch (option){
                case 1:
                    $("#registrationHeader").text("Confirmed Registrations:");
                    $('#registrationsSideBarConfirmed').addClass("active");
                    $('#registrationsSideBarPending, #registrationsSideBarStandby, #registrationsSideBarDeclined, #registrationsSideBarDeleted, #registrationsSideBarAll').removeClass("active");
                    $(".Pending, .Standby, .Declined, .Deleted").hide();
                    $(".Confirmed").show();
                    break;
                case 2:
                    $("#registrationHeader").text("Pending Registrations:");
                    $('#registrationsSideBarPending').addClass("active");
                    $('#registrationsSideBarConfirmed, #registrationsSideBarStandby, #registrationsSideBarDeclined, #registrationsSideBarDeleted, #registrationsSideBarAll').removeClass("active");
                    $(".Confirmed, .Standby, .Declined, .Deleted").hide();
                    $(".Pending").show();
                    break;
                case 3:
                    $("#registrationHeader").text("Standby Registrations:");
                    $('#registrationsSideBarStandby').addClass("active");
                    $('#registrationsSideBarConfirmed, #registrationsSideBarPending, #registrationsSideBarDeclined, #registrationsSideBarDeleted, #registrationsSideBarAll').removeClass("active");
                    $(".Confirmed, .Pending, .Declined, .Deleted").hide();
                    $(".Standby").show();
                    break;
                case 4:
                    $("#registrationHeader").text("Declined Registrations:");
                    $('#registrationsSideBarDeclined').addClass("active");
                    $('#registrationsSideBarConfirmed, #registrationsSideBarPending, #registrationsSideBarStandby, #registrationsSideBarDeleted, #registrationsSideBarAll').removeClass("active");
                    $(".Confirmed, .Pending, .Standby, .Deleted").hide();
                    $(".Declined").show();
                    break;
                case 5:
                    $("#registrationHeader").text("Deleted Registrations:");
                    $('#registrationsSideBarDeleted').addClass("active");
                    $('#registrationsSideBarConfirmed, #registrationsSideBarPending, #registrationsSideBarStandby, #registrationsSideBarDeclined, #registrationsSideBarAll').removeClass("active");
                    $(".Confirmed, .Pending, .Standby, .Declined").hide();
                    $(".Deleted").show();
                    break;
                case 0:
                    $("#registrationHeader").text("All Registrations:");
                    $('#registrationsSideBarAll').addClass("active");
                    $('#registrationsSideBarConfirmed, #registrationsSideBarPending, #registrationsSideBarStandby, #registrationsSideBarDeclined, #registrationsSideBarDeleted').removeClass("active");
                    $(".Confirmed, .Pending, .Standby, .Declined, .Deleted").show();
                    break;
            }
        }
         

        function RegisterClick(id) {
            console.log(id);
            if (events == null){
                return;
            }
            selectedEvent = events.find(item => item.EventID == id);
            console.log('Event Name is:' + selectedEvent.EventName);
            $('#modalEventTitle').text(selectedEvent.EventName);
            var $description = $('<div/>');
            $description.append($('<p/>').html('<h5><b>' + selectedEvent.EventName + '</b></h5>'));
            $description.append($('<p/>').html('<b>Starts: </b>' + moment(selectedEvent.StartTime).format("MM/DD/YY HHmm")));
            $description.append($('<p/>').html('<b>Ends: </b>' + moment(selectedEvent.EndTime).format("MM/DD/YY HHmm")));
            $description.append($('<p/>').html('<b>Description: </b>' + selectedEvent.Description));
            $('#myModal #pDetails').empty().html($description);
            $('#myModal').modal();
        }
        function RegistrationClick(id){
            console.log("You clicked registration number:" +id)
            if (registrations == null){
                return;
            }
            selectedRegistration = registrations.find(item => item.RegistrationID == id);

            switch (selectedRegistration.Status){
                case 1:
                    var Status = "Pending"
                    break;
                case 2:
                    var Status = "Confirmed"
                    break;
                case 3:
                    var Status = "Standby"
                    break;
                case 4:
                    var Status = "Declined"
                    break;
                case 5:
                    var Status = "Deleted"
                    break;
                case 6:
                    var Status = "FTA"
                    break;
            }
            $('#modalEventTitle').text(Event.EventName);
            var $description = $('<div/>');
            $description.append($('<p/>').html('<h5><b>' + selectedRegistration.EventName + '</b></h5>'));
            $description.append($('<p/>').html('<b>Starts: </b>' + moment(selectedRegistration.EventStartTime).format("MM/DD/YY HHmm")));
            $description.append($('<p/>').html('<b>Ends: </b>' + moment(selectedRegistration.EventEndTime).format("MM/DD/YY HHmm")));
            $description.append($('<p/>').html('<b>Description: </b>' + selectedRegistration.EventDescription));
            $description.append($('<p/>').html('<b>Date Registered: </b>' + moment(selectedRegistration.TimeStamp).format("MM/DD/YY HHmm")));
            $description.append($('<p/>').html('<b>Status: </b>' + Status));
            $('#myRegistrationModalpDetails').empty().html($description);
            $('#myRegistrationModal').modal();
        }

    </script>







    }
